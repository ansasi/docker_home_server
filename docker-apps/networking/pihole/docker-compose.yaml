# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
volumes:
  etc-pihole:
  etc-dnsmasq.d:

networks:
  pihole_internal:
     ipam:
       config:
         - subnet: 172.70.9.0/29
     name: pihole_internal
  proxy:
    external: true

services:
  # Cloudflared DNS-over-HTTPS proxy so ISP can't see your DNS queries
  cloudflared:
    container_name: cloudflared
    # Restart on crashes and on reboots
    restart: unless-stopped
    image: cloudflare/cloudflared:latest
    command: proxy-dns
    environment:
      - "TUNNEL_DNS_UPSTREAM=https://1.1.1.1/dns-query,https://1.0.0.1/dns-query,https://9.9.9.9/dns-query,https://149.112.112.9/dns-query"

      # Listen on an unprivileged port
      - "TUNNEL_DNS_PORT=5053"

      # Listen on all interfaces
      - "TUNNEL_DNS_ADDRESS=0.0.0.0"

    # Attach cloudflared only to the private network
    networks:
      pihole_internal:
        ipv4_address: 172.70.9.2
    security_opt:
      - no-new-privileges:true


  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    #  - "67:67/udp" DHCP - uncomment if using it
      - "500:80/tcp"
    #  - "443:443/tcp"
    networks:
      pihole_internal:
        ipv4_address: 172.70.9.3
      proxy:
    environment:
      TZ: 'Europe/Madrid'
      # TODO: Set a password to access the web interface
      FTLCONF_webserver_api_password: 'correct horse battery staple'
      # If using Docker's default `bridge` network setting the dns listening mode should be set to 'all'3
      FTLCONF_dns_listeningMode: 'all'
      FTLCONF_dns_upstreams: '172.70.9.2#5053'
    # Volumes store your data between container upgrades
    volumes:
      - 'etc-pihole:/etc/pihole'
      - 'etc-dnsmasq.d:/etc/dnsmasq.d'
    # cap_add:
    #   # Required if you are using Pi-hole as your DHCP server, else not needed
    #   # See Note On Capabilities below
    #   - NET_ADMIN
    restart: unless-stopped
    depends_on:
      - cloudflared
    labels:
      - traefik.enable=true
      - traefik.http.routers.pihole.entrypoints=web
      - traefik.http.routers.pihole.rule=Host(`pihole.sheetgenius.app`)
      # - traefik.http.routers.pihole.middlewares=default-whitelist@file
      - traefik.http.routers.pihole-secure.entrypoints=websecure
      - traefik.http.routers.pihole-secure.rule=Host(`pihole.sheetgenius.app`)
      - traefik.http.routers.pihole-secure.tls=true
      - traefik.http.routers.pihole-secure.tls.certresolver=cloudflare=
