version: '3.8'

networks:
  database:
    driver: bridge
  internal:
    driver: bridge

services:
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    environment:
      - TZ=Europe/Madrid
    network_mode: 'host'
    volumes:
      - /path/to/jellyfin/config:/config  # TODO: Replace with the actual config path
      - /path/to/jellyfin/cache:/cache    # TODO: Replace with the actual cache path
      - /path/to/media:/media             # TODO: Replace with your media path
    restart: unless-stopped

  nextcloud:
    image: linuxserver/nextcloud
    container_name: nextcloud
    environment:
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=your_password  # TODO: Set the database password
      - MYSQL_HOST=nextcloud_mariadb
      - TZ=Europe/Madrid
    volumes:
      - /nextcloud/html:/var/www/html  # TODO: Replace with the actual config path
      - /nextcloud/data:/var/www/html/data  # TODO: Replace with the actual data path
    networks:
      - internal
    ports:
      - 443:443
    restart: unless-stopped
    depends_on:
      - nextcloud_mariadb

  nextcloud_mariadb:
    image: linuxserver/mariadb
    container_name: nextcloud_mariadb
    environment:
      - MYSQL_ROOT_PASSWORD=your_password  # TODO: Set the database password
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=your_password  # TODO: Set the database password
      - TZ=Europe/Madrid
    volumes:
      - /path/to/nextcloud_mariadb:/var/lib/mysql  # TODO: Replace with the actual data path for persistent data
    networks:
      - database
    restart: unless-stopped

  photoprism:
    image: photoprism/photoprism:latest
    container_name: photoprism
    environment:
      - PHOTOPRISM_ADMIN_PASSWORD=your_admin_password     # TODO: Set the admin password
      # PHOTOPRISM_DISABLE_TENSORFLOW: "true"
      - PHOTOPRISM_DATABASE_DRIVER=mysql
      - PHOTOPRISM_DATABASE_SERVER=photoprism_mariadb:3306
      - PHOTOPRISM_DATABASE_NAME=photoprism
      - PHOTOPRISM_DATABASE_USER=photoprism
      - PHOTOPRISM_DATABASE_PASSWORD=your_database_password  # TODO: Set the database password
      - PHOTOPRISM_SITE_URL=http://localhost:2342/
      - PHOTOPRISM_SITE_TITLE=PhotoPrism
    devices:
      - "/dev/video11:/dev/video11"
    volumes:
      - /nextcloud/data/angel/files/Photos/Camera:/photoprism/originals/angel:ro  # TODO: Replace with the actual path
    networks:
      - internal
    ports:
      - 2342:2342
    restart: unless-stopped
    # labels:
    #   ofelia.enabled: "true"
    #   ofelia.job-exec.photoprism_index.schedule: "@every 1h"
    #   ofelia.job-exec.photoprism_index.command: "photoprism index --cleanup"
    depends_on:
      - photoprism_mariadb

  photoprism_mariadb:
    image: linuxserver/mariadb
    container_name: photoprism_mariadb
    environment:
      - MYSQL_ROOT_PASSWORD=${PHOTOPRISM_ROOT_DATABASE_PASSWORD} # TODO: Set the database password
      - MYSQL_DATABASE=photoprism
      - MYSQL_USER=photoprism
      - MYSQL_PASSWORD=${PHOTOPRISM_DATABASE_PASSWORD}
      - TZ=Europe/Madrid
    volumes:
      - photoprism_mariadb:/var/lib/mysql # TODO: Replace with the actual path
    networks: 
      - database
    restart: unless-stopped


  # ofelia:
  #   restart: unless-stopped
  #   image: mcuadros/ofelia:latest
  #   container_name: ofelia
  #   command: daemon --docker
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   depends_on:
  #     - photoprism

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    environment:
      - TZ=Europe/Madrid
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /path/to/portainer/data:/data  # TODO: Replace with the actual data path
    networks:
      - internal
    ports:
      - 9443:9443
    restart: unless-stopped

  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Madrid
      - UMASK_SET=022
      - WEBUI_PORT=8080
    volumes:
      - /path/to/qbittorrent/config:/config  # TODO: Replace with the actual config path
      - /path/to/qbittorrent/download:/downloads  # TODO: Replace with the actual download path
    networks:
      - internal
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 8080:8080
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      - TZ=Europe/Madrid
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - /path/to/prometheus:/etc/prometheus  # TODO: Replace with the actual path
    networks:
      - internal
    ports:
      - 9090:9090
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=your_password  # TODO: Set the Grafana admin password
    volumes:
      - /path/to/grafana:/var/lib/grafana  # TODO: Replace with the actual path
      - /path/to/grafana/provisioning:/etc/grafana/provisioning  # TODO: Replace with the actual path
    networks:
      - internal
    ports:
      - 3000:3000
    restart: unless-stopped
    depends_on:
      - prometheus

  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    network_mode: 'host'
    pid: "host"
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - internal
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'

  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - internal
    ports:
      - "8081:8081"
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
      - /path/to/alertmanager:/etc/alertmanager  # TODO: Replace with the actual path
    command:
      - '--config.file=/etc/alertmanager/config.yml'
    networks:
      - internal
    ports:
      - "9093:9093"
    restart: unless-stopped
