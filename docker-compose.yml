version: '3.8'

networks:
  database:
    driver: bridge
  internal:
    driver: bridge

services:
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    environment:
      - TZ=Europe/Madrid
    user: "1000:1000"
    network_mode: 'host'
    volumes:
      - /path/to/config:/config  # TODO: Replace with the actual config path
      - /path/to/cache:/cache  # TODO: Replace with the actual cache path
      - type: bind
        source: /path/to/media  # TODO: Replace with actual media path
        target: /media
    restart: 'unless-stopped'

  nextcloud:
    image: linuxserver/nextcloud
    container_name: nextcloud
    environment:
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=your_password  # TODO: Set the database password
      - MYSQL_HOST=mariadb
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Madrid
    volumes:
      - /path/to/config:/config  # TODO: Replace with the actual config path
      - /path/to/data:/data  # TODO: Replace with the actual data path
    networks:
      - database
      - internal
    ports:
      - 443:443
    restart: unless-stopped
    depends_on:
      - mariadb

  mariadb:
    image: linuxserver/mariadb
    container_name: mariadb
    environment:
      - TZ=Europe/Madrid
      - MYSQL_ROOT_PASSWORD=your_password  # TODO: Set the database password
    volumes:
      - /path/to/config:/config  # TODO: Replace with the actual config path
      - /path/to/mysql:/var/lib/mysql  # TODO: Replace with the actual data path for persistent data
    networks:
      - database
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    environment: 
      - TZ=Europe/Madrid
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /path/to/data:/data  # TODO: Replace with the actual data path
    networks:
      - internal
    ports:
      - 9443:9443
    restart: unless-stopped

  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Madrid
      - UMASK_SET=022
      - WEBUI_PORT=8080
    volumes:
      - /path/to/config:/config  # TODO: Replace with the actual config path
      - /path/to/download:/downloads  # TODO: Replace with the actual download path
    networks:
      - internal
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 8080:8080
    restart: unless-stopped

  photoprism:
    image: photoprism/photoprism:latest
    container_name: photoprism
    environment:
      PHOTOPRISM_ADMIN_PASSWORD: "your_admin_password"  # TODO: Set the admin password
      PHOTOPRISM_ORIGINALS_LIMIT: 1000
      PHOTOPRISM_HTTP_COMPRESSION: "none"
      PHOTOPRISM_WORKERS: 1
      PHOTOPRISM_DEBUG: "false"
      PHOTOPRISM_PUBLIC: "false"
      PHOTOPRISM_READONLY: "false"
      PHOTOPRISM_EXPERIMENTAL: "false"
      PHOTOPRISM_DISABLE_WEBDAV: "false"
      PHOTOPRISM_DISABLE_SETTINGS: "false"
      PHOTOPRISM_DISABLE_TENSORFLOW: "true"
      PHOTOPRISM_DARKTABLE_PRESETS: "true"
      PHOTOPRISM_FFMPEG_ENCODER: "h264_v4l2m2m"
      PHOTOPRISM_FFMPEG_BUFFERS: "64"
      PHOTOPRISM_DETECT_NSFW: "false"
      PHOTOPRISM_UPLOAD_NSFW: "true"
      PHOTOPRISM_DATABASE_DRIVER: "mysql"
      PHOTOPRISM_DATABASE_SERVER: "mariadb:3306"
      PHOTOPRISM_DATABASE_NAME: "photoprism"
      PHOTOPRISM_DATABASE_USER: "photoprism"
      PHOTOPRISM_DATABASE_PASSWORD: "your_database_password"  # TODO: Set the database password
      PHOTOPRISM_SITE_URL: "http://localhost:2342/"
      PHOTOPRISM_SITE_TITLE: "PhotoPrism"
      PHOTOPRISM_SITE_CAPTION: "Browse Your Life"
    user: "1000:1000"
    devices:
      - "/dev/video11:/dev/video11"
    volumes:
      - "/path/to/original/photo:/photoprism/originals/"  # TODO: Replace with the actual path
      - "/path/to/data:/photoprism/storage"  # TODO: Replace with the actual path
    networks: 
      - database
      - internal
    ports:
      - 2342:2342
    restart: unless-stopped
    depends_on: 
      - mariadb

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      - TZ=Europe/Madrid
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - /path/to/prometheus:/etc/prometheus  # TODO: Replace with the actual path
      - /path/to/prometheus/data:/prometheus  # TODO: Replace with the actual path
    ports:
      - 9090:9090
    networks:
      - internal
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=your_password  # TODO: Set the Grafana admin password
    volumes:
      - /path/to/grafana:/var/lib/grafana  # TODO: Replace with the actual path
      - /path/to/grafana/provisioning:/etc/grafana/provisioning  # TODO: Replace with the actual path
    ports:
      - 3000:3000
    networks:
      - internal
    restart: unless-stopped
    depends_on:
      - prometheus

  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    network_mode: 'host'
    pid: "host"
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
    ports:
      - "9100:9100"

  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    ports:
      - "8081:8081"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - internal
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - /path/to/alertmanager:/etc/alertmanager  # TODO: Replace with the actual path
    command:
      - '--config.file=/etc/alertmanager/config.yml'
    networks:
      - internal
    restart: unless-stopped
