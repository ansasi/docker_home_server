---
# This is the main playbook for the Raspberry Pi Home Server
# Basic setup
- name: Update the system
  hosts: all
  become: yes
  roles:
    - distro_upgrade

- name: Install Docker
  hosts: all
  become: yes
  roles:
    - geerlingguy.docker
  vars:
    docker_users:
      - "{{ ansible_user }}"

- name: Create Docker network
  hosts: all
  become: yes
  tasks:
    - name: Create Docker network
      docker_network:
        name: proxy
        state: present
        driver: bridge

# Docker Apps
# PiHole Requirements
# For Ubuntu Installation:
# 1. disable DNSStubListener=yes in /etc/systemd/resolved.conf
# 2. sudo systemctl restart systemd-resolved
- name: Install PiHole
  hosts: dns
  become: yes
  tasks:
    - name: Disable systemd-resolved DNSStubListener for PiHole if Ubuntu
      lineinfile:
        path: /etc/systemd/resolved.conf
        regexp: '^#?DNSStubListener='
        line: 'DNSStubListener=no'
      notify: Restart systemd-resolved
      when: ansible_distribution == 'Ubuntu'
  handlers:
    - name: Restart systemd-resolved
      systemd:
        name: systemd-resolved
        state: restarted
  roles:
    - docker_compose_deploy
  vars:
    docker_compose_src: "{{ playbook_dir }}/../docker-apps/networking/pihole/"
    docker_compose_dest: "/home/{{ ansible_user }}/docker_home_server/docker-apps/networking/pihole/"
    docker_compose_env:
      PIHOLE_WEB_PASSWORD: "{{ PIHOLE_PASSWORD }}"

- name: Install Traefik
  hosts: docker
  become: yes
  roles:
    - docker_compose_deploy
  vars:
    docker_compose_src: "{{ playbook_dir }}/../docker-apps/networking/traefik/"
    docker_compose_dest: "/home/{{ ansible_user }}/docker_home_server/docker-apps/networking/traefik/"

- name: Install Portainer
  hosts: all
  become: yes
  roles:
    - docker_compose_deploy
  vars:
    docker_compose_src: "{{ playbook_dir }}/../docker-apps/management/portainer/"
    docker_compose_dest: "/home/{{ ansible_user }}/docker_home_server/docker-apps/management/portainer/"

- name: Install Homepage
  hosts: docker
  become: yes
  roles:
    - docker_compose_deploy
  vars:
    docker_compose_src: "{{ playbook_dir }}/../docker-apps/management/homepage/"
    docker_compose_dest: "/home/{{ ansible_user }}/docker_home_server/docker-apps/management/homepage/"
    docker_compose_env:
      HOMEPAGE_VAR_PIHOLE_KEY: "{{ PIHOLE_PASSWORD }}"
      HOMEPAGE_VAR_QNAP_USERNAME: "{{ QNAP_USERNAME }}"
      HOMEPAGE_VAR_QNAP_PASSWORD: "{{ QNAP_PASSWORD }}"

- name: Install Home Assistant
  hosts: docker
  become: yes
  roles:
    - docker_compose_deploy
  vars:
    docker_compose_src: "{{ playbook_dir }}/../docker-apps/automation/homeassistant/"
    docker_compose_dest: "/home/{{ ansible_user }}/docker_home_server/docker-apps/automation/homeassistant/"
    docker_compose_env:
      HOMEASSISTANT_PASSWORD: "{{ HOMEASSISTANT_PASSWORD }}"