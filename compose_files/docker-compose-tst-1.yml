version: '3.8'

networks:
  internal:
    driver: bridge
    name: internal

services:
  homer:
    image: b4bz/homer
    container_name: homer
    volumes:
      - ./homer/:/www/assets # Make sure your local config directory exists
    ports:
      - 8080:8080
    user: 1000:1000 # default
    environment:
      - INIT_ASSETS=1 # default, requires the config directory to be writable for the container user (see user option)
    restart: unless-stopped
    
  # traefik:
  #   image: traefik:v3
  #   container_name: traefik
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #     - "8081:8080"
  #   environment:
  #     - CF_DNS_API_TOKEN=$CF_DNS_API_TOKEN
  #   volumes:
  #     - ./traefik/traefik.yml:/etc/traefik/traefik.yaml:ro
  #     - ./traefik/certs:/var/traefik/certs/:rw
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   networks:
  #     - internal
  #   restart: unless-stopped

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/ansasi/docker/portainer/data:/data
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.sheetgenius.app`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.certresolver=cloudflare"
      - "traefik.http.services.portainer.loadbalancer.server.port=9443"
    # You can remove the ports mapping if you only want it accessible via Traefik:
    ports:
      - 9443:9443
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - internal
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    # # TODO
    # volumes:
    #   - /home/ansasi/docker/prometheus:/etc/prometheus
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.sheetgenius.app`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.certresolver=cloudflare"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    # # Remove or keep ports mapping depending on if you want direct host access:
    # ports:
    #   - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Replace with a secure password
    # # TODO
    # volumes:
    #   - /home/ansasi/docker/grafana:/var/lib/grafana
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.sheetgenius.app`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.certresolver=cloudflare"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    # Remove or keep the port mapping:
    ports:
      - 3000:3000 
    restart: unless-stopped
    depends_on:
      - prometheus
