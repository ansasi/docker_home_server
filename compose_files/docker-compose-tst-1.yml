version: '3.8'

networks:
  database:
    driver: bridge
  internal:
    driver: bridge

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.dashboard=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic/"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /home/ansasi/docker/traefik/dynamic:/etc/traefik/dynamic
      - /home/ansasi/docker/traefik/certs:/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - internal
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    environment:
      - TZ=Europe/Madrid
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/ansasi/docker/portainer/data:/data
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.example.com`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.services.portainer.loadbalancer.server.port=9443"
    # You can remove the ports mapping if you only want it accessible via Traefik:
    ports:
      - 9443:9443
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      - TZ=Europe/Madrid
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - internal
    restart: unless-stopped
    # watchtower doesn't need to be exposed via Traefik unless desired

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - /home/ansasi/docker/prometheus:/etc/prometheus
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.example.com`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    # Remove or keep ports mapping depending on if you want direct host access:
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Replace with a secure password
    volumes:
      - /home/ansasi/docker/grafana:/var/lib/grafana
      - /home/ansasi/docker/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.example.com`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    # Remove or keep the port mapping:
    ports:
      - 3000:3000
    restart: unless-stopped
    depends_on:
      - prometheus
