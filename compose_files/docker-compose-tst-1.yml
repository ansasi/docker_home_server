---
networks:
  internal:
    driver: bridge
    name: internal

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  pihole-data:
    driver: local
  pihole-dnsmasq.d:
    driver: local

services:
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    ports:
      - 3000:3000
    volumes:
      - /path/to/config:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock # (optional) For docker integrations
    
  traefik:
    image: traefik:v3
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
    environment:
      - TZ=Europe/Madrid
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yaml:ro
      - ./traefik/certs:/var/traefik/certs/:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.sheetgenius.app`)"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      # TODO: review if other tags are needed
      # - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:$$apr1$$QWVXQWVX$$"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.sheetgenius.app`)"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.traefik-secure.tls.domains[0].main=sheetgenius.app"
      - "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.sheetgenius.app"
      - "traefik.http.routers.traefik-secure.service=api@internal"
      - "traefik.http.services.traefik-secure.loadbalancer.server.port=8080"
    restart: unless-stopped
  
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    environment:
      - TZ=Europe/Madrid
      - WEBPASSWORD=admin   # Set a secure password
      - DNS1=1.1.1.1
      - DNS2=1.0.0.1
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "8081:80/tcp" # localhost:8081/admin for the Web UI
    volumes:
      - pihole-data:/etc/pihole/
      - pihole-dnsmasq.d:/etc/dnsmasq.d
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
    # Add Pi-hole to the internal network if you want internal name resolution
    networks:
      - internal

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/ansasi/docker/portainer/data:/data
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.sheetgenius.app`)"
      - "traefik.http.routers.portainer.entrypoints=https"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.certresolver=cloudflare"
      - "traefik.http.services.portainer.loadbalancer.server.port=9443"
    # You can remove this port mapping if accessing only via Traefik:
    ports:
      - "9443:9443"
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - internal
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.sheetgenius.app`)"
      - "traefik.http.routers.prometheus.entrypoints=https"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.certresolver=cloudflare"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Replace with a secure password
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.sheetgenius.app`)"
      - "traefik.http.routers.grafana.entrypoints=https"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.certresolver=cloudflare"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    ports:
      - 3001:3000
    restart: unless-stopped
    depends_on:
      - prometheus
    
  node_exporter:
    image: quay.io/prometheus/node-exporter
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - internal
    pid: host
    restart: unless-stopped
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    # ports:
    #   - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /run:/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - internal
    devices:
      - /dev/kmsg
    restart: unless-stopped

  # Uncomment and configure Plex or Jellyfin as needed, ensuring correct volumes and environment
  # plex:
  #   image: lscr.io/linuxserver/plex:latest
  #   container_name: plex
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Madrid
  #     - VERSION=docker
  #   # volumes:
  #   #   - /home/ansasi/docker/plex/config:/config  # Plex library data
  #   #   - /home/ansasi/media/tvseries:/tv         # TV series directory
  #   #   - /home/ansasi/media/movies:/movies       # Movies directory
  #   networks:
  #     - internal
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.plex.rule=Host(`plex.sheetgenius.app`)"
  #     - "traefik.http.routers.plex.entrypoints=https"
  #     - "traefik.http.routers.plex.tls=true"
  #     - "traefik.http.routers.plex.certresolver=cloudflare"
  #     - "traefik.http.services.plex.loadbalancer.server.port=32400"
  #   ports:
  #     - 32400:32400
  #     - 3005:3005
  #     - 8324:8324
  #     - 32469:32469
  #     - 1900:1900/udp
  #     - 32410:32410/udp
  #     - 32412:32412/udp
  #     - 32413:32413/udp
  #     - 32414:32414/udp
  #   restart: unless-stopped

  # jellyfin:
  #   image: jellyfin/jellyfin:latest
  #   container_name: jellyfin
  #   environment:
  #     - TZ=Europe/Madrid
  #   # volumes:
  #   #   - /home/ansasi/docker/jellyfin/config:/config  # Jellyfin configuration
  #   #   - /home/ansasi/docker/jellyfin/cache:/cache    # Jellyfin cache
  #   #   - /home/ansasi/media:/media                    # Media files
  #   networks:
  #     - internal
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.sheetgenius.app`)"
  #     - "traefik.http.routers.jellyfin.entrypoints=https"
  #     - "traefik.http.routers.jellyfin.tls=true"
  #     - "traefik.http.routers.jellyfin.certresolver=cloudflare"
  #     - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
  #   ports:
  #     - 8096:8096
  #     - 8920:8920
  #   restart: unless-stopped
