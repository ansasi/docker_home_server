version: "3.8"

volumes:
  uptimekuma-data:
    driver: local
  # netdata-data:
  #   driver: local
  grafana-data:
    driver: local
  prometheus-data:
    driver: local

services:
# --- Uptime Kuma Image
  uptimekuma:
    image: louislam/uptime-kuma:latest
    container_name: uptimekuma
    volumes:
      - uptimekuma-data:/app/data # ./monitoring/uptime-kuma/data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8160:3001"
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.uptimekuma.entrypoints=web
      - traefik.http.routers.uptimekuma.rule=Host(`uptimekuma.sheetgenius.app`)
      - traefik.http.routers.uptimekuma-websecure.entrypoints=websecure
      - traefik.http.routers.uptimekuma-websecure.rule=Host(`uptimekuma.sheetgenius.app`)
      - traefik.http.routers.uptimekuma-websecure.tls=true
      - traefik.http.routers.uptimekuma-websecure.tls.certresolver=cloudflare
    networks:
      - netmonitor


# # --- Netdata Image
#   netdata:
#     image: netdata/netdata
#     container_name: netdata
# #    hostname: example.com       # Optional set to fqdn of host
#     cap_add:
#       - SYS_PTRACE
#     security_opt:
#       - apparmor:unconfined
#     volumes:
#       - /proc:/host/proc:ro
#       - /sys:/host/sys:ro
#       - /etc/os-release:/host/etc/os-release:ro
#       - /etc/passwd:/host/etc/passwd:ro
#       - /etc/group:/host/etc/group:ro
# #      - ./monitoring/netdata/netdataconfig:/etc/netdata        # Optional
# #      - ./monitoring/netdata/netdatalib:/var/lib/netdata       # Optional
# #      - ./monitoring/netdata/netdatacache:/var/cache/netdata   # Optional
#     ports:
#       - 8166:19999
#     restart: unless-stopped
#     labels:
#       - traefik.enable=true
#       - traefik.http.routers.netdata.entrypoints=web
#       - traefik.http.routers.netdata.rule=Host(`netdata.sheetgenius.app`)
#       - traefik.http.routers.netdata-websecure.entrypoints=websecure
#       - traefik.http.routers.netdata-websecure.rule=Host(`netdata.sheetgenius.app`)
#       - traefik.http.routers.netdata-websecure.tls=true
#       - traefik.http.routers.netdata-websecure.tls.certresolver=cloudflare
#     networks:
#       - netmonitor


# --- Grafana Image
  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      # - ./monitoring/grafana/data:/var/lib/grafana
      - grafana-data:/var/lib/grafana # ./monitoring/grafana/data:/var/lib/grafana
    ports:
      - "8164:3000"
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.entrypoints=web
      - traefik.http.routers.grafana.rule=Host(`grafana.sheetgenius.app`)
      - traefik.http.routers.grafana-websecure.entrypoints=websecure
      - traefik.http.routers.grafana-websecure.rule=Host(`grafana.sheetgenius.app`)
      - traefik.http.routers.grafana-websecure.tls=true
      - traefik.http.routers.grafana-websecure.tls.certresolver=cloudflare
    networks:
      - netmonitor


# --- Prometheus Image
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - prometheus-data:/prometheus # ./monitoring/prometheus/data:/prometheus
    ports:
      - "8163:9090"
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus-http.entrypoints=web
      - traefik.http.routers.prometheus-http.rule=Host(`prometheus.sheetgenius.app`)
      - traefik.http.routers.prometheus-https.entrypoints=websecure
      - traefik.http.routers.prometheus-https.rule=Host(`prometheus.sheetgenius.app`)
      - traefik.http.routers.prometheus-https.tls=true
      - traefik.http.routers.prometheus-https.tls.certresolver=cloudflare
    networks:
      - netmonitor


# # --- OpenSpeedTest Image
#   openspeedtest:
#     image: openspeedtest/latest
#     container_name: openspeedtest
#     ports:
#       - 8161:3000
#       - 8162:3001
#     restart: unless-stopped
#     # TODO: Check if the labels are correct for both ports
#     labels:
#       - traefik.enable=true
#       - traefik.http.routers.openspeedtest.entrypoints=web
#       - traefik.http.routers.openspeedtest.rule=Host(`openspeedtest.sheetgenius.app`)
#       - traefik.http.routers.openspeedtest-websecure.entrypoints=websecure
#       - traefik.http.routers.openspeedtest-websecure.rule=Host(`openspeedtest.sheetgenius.app`)
#       - traefik.http.routers.openspeedtest-websecure.tls=true
#       - traefik.http.routers.openspeedtest-websecure.tls.certresolver=cloudflare
#     networks:
#       - netmonitor

networks:
  netmonitor:
    driver: bridge
    attachable: true
    internal: false
    # ipam:
    #   config:
    #     - subnet: 172.50.0.0/16 # CHANGE THE SUBNET TO YOUR OWN PREFERRED RANGE!!!
    #       gateway: 172.50.0.1 # GATEWAY GOES WITH THE SUBNET!!!