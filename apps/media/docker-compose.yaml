version: "3.8"

volumes:
  gluetun-data:
    driver: local

networks:
  proxy:
    external: true

services:
###--- Jellyfin Image - Media Library / Player - Used to play the media content ---###
  jellyfin:
    container_name: jellyfin
    image: jellyfin/jellyfin:latest
    restart: unless-stopped
    devices:
#      - /dev/dri:/dev/dri # Directory containing all Direct Rendering Infrastructure (DRI) devices, including render and card devices, for general GPU access
#      - /dev/dri/card0:/dev/dri/card0 # FULL GPU 01 access
      - /dev/dri/card1:/dev/dri/card1 # FULL GPU 02 access
      - /dev/dri/renderD128:/dev/dri/renderD128 # GPU render only 01 access
#      - /dev/dri/renderD129:/dev/dri/renderD129 # GPU render only 02 access
#      - /dev/vcsm:/dev/vcsm # Raspberry Pi VideoCore Shared Memory (VCSM) device, used on Raspberry Pi for managing shared memory between GPU and CPU
#      - /dev/vchiq:/dev/vchiq # Raspberry Pi VideoCore Host Interface Queue (VCHIQ) device, used on Raspberry Pi for communication between the CPU and GPU
#      - /dev/video10:/dev/video10 # Video device interface 10, typically used for video capture or encoding hardware (often for camera or multimedia applications)
#      - /dev/video11:/dev/video11 # Video device interface 11, similar to video10, for additional video capture or encoding capabilities
#      - /dev/video12:/dev/video12 # Video device interface 12, another video device for capturing or encoding, usually used in multimedia or camera applications
    environment:
      PGID: 1000
      PUID: 1000
      UMASK: 002
      TZ: Etc/UTC
    volumes:
      - /media/disk/exthdd01/extarrs/data/library/tv:/media/TV
      - /media/disk/exthdd01/extarrs/data/library/movies:/media/movies
      - /media/disk/exthdd01/extarrs/data/library/music:/media/music
      - /media/disk/exthdd01/extarrs/data/library/pictures:/media/pictures
      - /media/disk/exthdd01/extarrs/data/library/books:/media/books
      - ./appdata/jellyfin/config:/config
      - ./appdata/jellyfin/cache:/cache
      - /dev/shm:/transcode
#      - /opt/vc/lib:/opt/vc/lib # Raspberry Pi GPU libraries for multimedia operations
    ports:
      - 8110:8096
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin.entrypoints=web
      - traefik.http.routers.jellyfin.rule=Host(`jellyfin.sheetgenius.app`)
      - traefik.http.routers.jellyfin-websecure.entrypoints=websecure
      - traefik.http.routers.jellyfin-websecure.rule=Host(`jellyfin.sheetgenius.app`)
      - traefik.http.routers.jellyfin-websecure.tls=true
      - traefik.http.routers.jellyfin-websecure.tls.certresolver=cloudflare
    network_mode: "service:gluetun"
    depends_on:
      - gluetun


###--- ErsatzTV Image - IPTV Server. - configure and stream custom live TV channels using the media library. ---###
  # Latest Release Tags
  # Base (software transcoding): jasongdove/ersatztv:latest
  # Nvidia hardware-accelerated transcoding: jasongdove/ersatztv:latest-nvidia
  # VAAPI (Intel, AMD) hardware-accelerated transcoding: jasongdove/ersatztv:latest-vaapi

  # Development Tags
  # Development tags update much more frequently, but have the potential to be less stable than releases.
  # Base (software transcoding): jasongdove/ersatztv:develop
  # Nvidia hardware-accelerated transcoding: jasongdove/ersatztv:develop-nvidia
  # VAAPI (Intel, AMD) hardware-accelerated transcoding: jasongdove/ersatztv:develop-vaapi

#  ersatztv:
#    image: jasongdove/ersatztv:latest-vaapi
#    container_name: ersatztv
#    restart: unless-stopped
#    environment:
#      TZ: Etc/UTC
#    ports:
#      - 8294:8409
#    volumes:
#      - ./appdata/ersatztv/config:/root/.local/share/ersatztv
#    network_mode: "service:gluetun"
# ---------------
# Media paths not needed if you connect ErsatzTV to jellyfin with API key
#      - /media/disk/exthdd01/extarrs/data/library/tv:/media/TV
#      - /media/disk/exthdd01/extarrs/data/library/movies:/media/movies
#      - /media/disk/exthdd01/extarrs/data/library/music:/media/music
#      - /media/disk/exthdd01/extarrs/data/library/pictures:/media/pictures
#      - /media/disk/exthdd01/extarrs/data/library/books:/media/books
# ---------------

###--- Jellyseerr Image - Request management and media discovery tool ---###
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: unless-stopped
    environment:
      PGID: 1000
      PUID: 1000
      UMASK: 002
      LOG_LEVEL: debug
      TZ: Etc/UTC
    volumes:
      - ./appdata/jellyseerr/config:/app/config
    ports:
      - 8111:5055
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyseerr.entrypoints=web
      - traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.sheetgenius.app`)
      - traefik.http.routers.jellyseerr-websecure.entrypoints=websecure
      - traefik.http.routers.jellyseerr-websecure.rule=Host(`jellyseerr.sheetgenius.app`)
      - traefik.http.routers.jellyseerr-websecure.tls=true
      - traefik.http.routers.jellyseerr-websecure.tls.certresolver=cloudflare
    network_mode: "service:gluetun"
    depends_on:
      - gluetun


###--- qBittorrent Image - Download Client - Used to download torrent files ---###
  qbittorrent:
    image: ghcr.io/hotio/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      UMASK: 002
      TZ: Etc/UTC
      WEBUI_PORTS: 8080/tcp,8080/udp
    # TODO: Check ports with traefik
    ports:
      - 8290:8080
      - 8291:6881
      - 8291:6881/udp
    volumes:
      - ./appdata/qbittorrent/config:/config
      - ./data/torrents:/data/torrents
    labels:
      - traefik.enable=true
      - traefik.http.routers.qbittorrent.entrypoints=web
      - traefik.http.routers.qbittorrent.rule=Host(`qbittorrent.sheetgenius.app`)
      - traefik.http.routers.qbittorrent-websecure.entrypoints=websecure
      - traefik.http.routers.qbittorrent-websecure.rule=Host(`qbittorrent.sheetgenius.app`)
      - traefik.http.routers.qbittorrent-websecure.tls=true
      - traefik.http.routers.qbittorrent-websecure.tls.certresolver=cloudflare
    network_mode: "service:gluetun"
    depends_on:
      - gluetun

###--- qBitmanage Image - qBittorrent manager - Used to run automated tasks for qBittorrent ---###
  qbitmanage:
    image: ghcr.io/stuffanthings/qbit_manage:latest
    container_name: qbitmanage
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      UMASK: 002
      TZ: Etc/UTC
      QBT_RUN: false
      QBT_SCHEDULE: 1440
      QBT_CONFIG: config.yml
      QBT_LOGFILE: activity.log
      QBT_CROSS_SEED: false
      QBT_RECHECK: false
      QBT_CAT_UPDATE: false
      QBT_TAG_UPDATE: false
      QBT_REM_UNREGISTERED: false
      QBT_REM_ORPHANED: false
      QBT_TAG_TRACKER_ERROR: false
      QBT_TAG_NOHARDLINKS: false
      QBT_SHARE_LIMITS: false
      QBT_SKIP_CLEANUP: false
      QBT_DRY_RUN: false
      QBT_LOG_LEVEL: INFO
      QBT_DIVIDER: =
      QBT_WIDTH: 100
    volumes:
      - /media/disk/exthdd01/extarrs/data/torrents:/data/torrents
      - ./appdata/qbitmanage/config:/config
      - ./appdata/qbittorrent/data/BT_backup:/torrentdir
    network_mode: "service:gluetun"
    depends_on:
      - gluetun


###--- SABnzbd Image - Download client - Used to download NZB from Usenet groups ---###
### This container has been disabled since you need a premium Usenet provider subscription to download files. ###
### Enable this container if you found a free provider or want to pay for usenet ###
#  sabnzbd:
#    image: ghcr.io/hotio/sabnzbd:latest
#    container_name: sabnzbd
#    restart: unless-stopped
#    environment:
#      PUID: 1000
#      PGID: 1000
#      TZ: Etc/UTC
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#      - ./appdata/sabnzbd/config:/config
#      - /media/disk/exthdd01/extarrs/data/usenet:/data/usenet:rw
#    ports:
#      - 8292:8080
#      - 8293:9090
#    logging:
#      driver: json-file
#    network_mode: "service:gluetun"


###--- Prowlarr Image - Index and Search Management for "ARR" apps ---###
  prowlarr:
    image: ghcr.io/hotio/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Etc/UTC
    volumes:
      - ./appdata/prowlarr/config:/config
    ports:
      - "8113:9696"
    logging:
      driver: json-file
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr.entrypoints=web
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.sheetgenius.app`)
      - traefik.http.routers.prowlarr-websecure.entrypoints=websecure
      - traefik.http.routers.prowlarr-websecure.rule=Host(`prowlarr.sheetgenius.app`)
      - traefik.http.routers.prowlarr-websecure.tls=true
      - traefik.http.routers.prowlarr-websecure.tls.certresolver=cloudflare
    network_mode: "service:gluetun"
    depends_on:
      - gluetun


###--- Radarr Image - Library Manager for Movie content management ---###
### Do not use this container to download 4K Movie content. Enable container below to have seperate instance just for 4K Movie content ###
  radarr:
    image: ghcr.io/hotio/radarr:latest
    container_name: radarr
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Etc/UTC
    volumes:
      - ./appdata/radarr/config:/config
      - /media/disk/exthdd01/extarrs/data:/data
    ports:
      - 8114:7878
    logging:
      driver: json-file
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.entrypoints=web
      - traefik.http.routers.radarr.rule=Host(`radarr.sheetgenius.app`)
      - traefik.http.routers.radarr-websecure.entrypoints=websecure
      - traefik.http.routers.radarr-websecure.rule=Host(`radarr.sheetgenius.app`)
      - traefik.http.routers.radarr-websecure.tls=true
      - traefik.http.routers.radarr-websecure.tls.certresolver=cloudflare
    network_mode: "service:gluetun"
    depends_on:
      - gluetun

###--- Radarr 4K Image - Library Manager for Movie 4K content management ---###
### Enable this container to get seperate instance for 4K Movie content ###
#  radarr4k:
#    image: ghcr.io/hotio/radarr:latest
#    container_name: radarr4k
#    restart: unless-stopped
#    environment:
#      PUID: 1000
#      PGID: 1000
#      TZ: Etc/UTC
#    volumes:
#      - ./appdata/radarr4k/config:/config
#      - /media/disk/exthdd01/extarrs/data:/data
#    ports:
#      - 8344:7878
#    logging:
#      driver: json-file
#    network_mode: "service:gluetun"


###--- Sonarr Image - Library Manager for TV Show / Series / Anime content management ---###
### Do not use this container to download 4K TV content. Enable container below to have seperate instance just for 4K TV content ###
  sonarr:
    image: ghcr.io/hotio/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Etc/UTC
    volumes:
      - ./appdata/sonarr/config:/config
      - /media/disk/exthdd01/extarrs/data:/data
    ports:
      - 8115:8989
    logging:
      driver: json-file
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.entrypoints=web
      - traefik.http.routers.sonarr.rule=Host(`sonarr.sheetgenius.app`)
      - traefik.http.routers.sonarr-websecure.entrypoints=websecure
      - traefik.http.routers.sonarr-websecure.rule=Host(`sonarr.sheetgenius.app`)
      - traefik.http.routers.sonarr-websecure.tls=true
      - traefik.http.routers.sonarr-websecure.tls.certresolver=cloudflare
    network_mode: "service:gluetun"
    depends_on:
      - gluetun

###--- Sonarr 4K Image - Library Manager for 4K TV Show / Series / Anime content management ---###
### Enable this container to get seperate instance for 4K TV content ###
#  sonarr4k:
#    image: ghcr.io/hotio/sonarr:latest
#    container_name: sonarr
#    restart: unless-stopped
#    environment:
#      PUID: 1000
#      PGID: 1000
#      TZ: Etc/UTC
#    volumes:
#      - ./appdata/sonarr4k/config:/config
#      - /media/disk/exthdd01/extarrs/data:/data
#    ports:
#      - 8345:8989
#    logging:
#      driver: json-file
#    network_mode: "service:gluetun"


###--- Bazarr Image - Library Manager for Subtitle management ---###
  bazarr:
    image: ghcr.io/hotio/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Etc/UTC
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./appdata/bazarr/config:/config
      - /media/disk/exthdd01/extarrs/data:/data
    ports:
      - 8116:6767
    logging:
      driver: json-file
    labels:
      - traefik.enable=true
      - traefik.http.routers.bazarr.entrypoints=web
      - traefik.http.routers.bazarr.rule=Host(`bazarr.sheetgenius.app`)
      - traefik.http.routers.bazarr-websecure.entrypoints=websecure
      - traefik.http.routers.bazarr-websecure.rule=Host(`bazarr.sheetgenius.app`)
      - traefik.http.routers.bazarr-websecure.tls=true
      - traefik.http.routers.bazarr-websecure.tls.certresolver=cloudflare
    network_mode: "service:gluetun"
    depends_on:
      - gluetun


###--- Lidarr Image - Library Manager for Music content management ---###
  lidarr:
    image: ghcr.io/hotio/lidarr:latest
    container_name: lidarr
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Etc/UTC
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./appdata/lidarr/config:/config
      - /media/disk/exthdd01/extarrs/data:/data
    ports:
      - 8117:8686
    logging:
      driver: json-file
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidarr.entrypoints=web
      - traefik.http.routers.lidarr.rule=Host(`lidarr.sheetgenius.app`)
      - traefik.http.routers.lidarr-websecure.entrypoints=websecure
      - traefik.http.routers.lidarr-websecure.rule=Host(`lidarr.sheetgenius.app`)
      - traefik.http.routers.lidarr-websecure.tls=true
      - traefik.http.routers.lidarr-websecure.tls.certresolver=cloudflare
    network_mode: "service:gluetun"
    depends_on:
      - gluetun


###--- Readarr Image - Library Manager for Books / Epubs content management ---###
  readarr:
    image: ghcr.io/hotio/readarr:latest
    container_name: readarr
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Etc/UTC
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./appdata/readarr/config:/config
      - /media/disk/exthdd01/extarrs/data:/data
    ports:
      - 8118:8787
    logging:
      driver: json-file
    labels:
      - traefik.enable=true
      - traefik.http.routers.readarr.entrypoints=web
      - traefik.http.routers.readarr.rule=Host(`readarr.sheetgenius.app`)
      - traefik.http.routers.readarr-websecure.entrypoints=websecure
      - traefik.http.routers.readarr-websecure.rule=Host(`readarr.sheetgenius.app`)
      - traefik.http.routers.readarr-websecure.tls=true
      - traefik.http.routers.readarr-websecure.tls.certresolver=cloudflare
    network_mode: "service:gluetun"
    depends_on:
      - gluetun


###--- Unpackerr Image - Extracts downloads for Radarr, Sonarr, Lidarr, and Readarr - Deletes extracted files after import. ---###
  unpackerr:
    image: ghcr.io/hotio/unpackerr:latest
    container_name: unpackerr
    restart: unless-stopped
    volumes:
      - ./appdata/unpackerr/config:/config
      - /media/disk/exthdd01/extarrs/data/torrents:/data/torrents
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Etc/UTC
      UN_LOG_FILE: /data/torrents/unpackerr.log
      UN_SONARR_0_URL: http://sonarr:8989/sonarr
      UN_SONARR_0_API_KEY: IMPORT_SONARR_API_KEY_HERE
#      UN_SONARR_1_URL: http://sonarr4k:8989/sonarr
#      UN_SONARR_1_API_KEY: IMPORT_SONARR4k_API_KEY_HERE
      UN_RADARR_0_URL: http://radarr:7878/radarr
      UN_RADARR_0_API_KEY: IMPORT_RADARR_API_KEY_HERE
#      UN_RADARR_1_URL: http://radarr4k:7878/radarr
#      UN_RADARR_1_API_KEY: IMPORT_RADARR4k_API_KEY_HERE
      UN_LIDARR_0_URL: http://lidarr:8686/lidarr
      UN_LIDARR_0_API_KEY: IMPORT_LIDARR_API_KEY_HERE
      UN_READARR_0_URL: http://readarr:8787/readarr
      UN_READARR_0_API_KEY: IMPORT_READARR_API_KEY_HERE
    security_opt:
      - no-new-privileges:true
    network_mode: "service:gluetun"
    depends_on:
      - gluetun

  # --- Gluetun Image - VPN Client - Used to connect to VPN services ---###
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    hostname: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 6881:6881
      - 6881:6881/udp
      # Port to apps
      - 8085:8085 # qbittorrent
    volumes:
      - gluetun-data:/gluetun
    environment:
      # See https://github.com/qdm12/gluetun-wiki/tree/main/setup#setup
      - VPN_SERVICE_PROVIDER=protonvpn
      - VPN_TYPE=wireguard
      # Wireguard:
      - WIREGUARD_PRIVATE_KEY=<YOUR_PRIVATE_KEY> # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/providers/nordvpn.md#obtain-your-wireguard-private-key
      - SERVER_COUNTRIES=Switzerland
      - STREAM_ONLY=on
      # Timezone for accurate log times
      - TZ=Europe/Zurich
      # Server list updater
      # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/servers.md#update-the-vpn-servers-list
      - UPDATER_PERIOD=24h
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.qbittorrent.entrypoints=http"
      - "traefik.http.routers.qbittorrent.rule=Host(`qbittorrent.jimsgarage.co.uk`)"
      - "traefik.http.middlewares.qbittorrent-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.qbittorrent.middlewares=qbittorrent-https-redirect"
      - "traefik.http.routers.qbittorrent-secure.entrypoints=https"
      - "traefik.http.routers.qbittorrent-secure.rule=Host(`qbittorrent.jimsgarage.co.uk`)"
      - "traefik.http.routers.qbittorrent-secure.tls=true"
      - "traefik.http.routers.qbittorrent-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.qbittorrent-secure.service=qbittorrent"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8085"

      - "traefik.http.routers.jackett.entrypoints=http"
      - "traefik.http.routers.jackett.rule=Host(`jackett.jimsgarage.co.uk`)"
      - "traefik.http.middlewares.jackett-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.jackett.middlewares=jackett-https-redirect"
      - "traefik.http.routers.jackett-secure.entrypoints=https"
      - "traefik.http.routers.jackett-secure.rule=Host(`jackett.jimsgarage.co.uk`)"
      - "traefik.http.routers.jackett-secure.tls=true"
      - "traefik.http.routers.jackett-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.jackett-secure.service=jackett"
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"

      - "traefik.http.routers.sonarr.entrypoints=http"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.jimsgarage.co.uk`)"
      - "traefik.http.middlewares.sonarr-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.sonarr.middlewares=sonarr-https-redirect"
      - "traefik.http.routers.sonarr-secure.entrypoints=https"
      - "traefik.http.routers.sonarr-secure.rule=Host(`sonarr.jimsgarage.co.uk`)"
      - "traefik.http.routers.sonarr-secure.tls=true"
      - "traefik.http.routers.sonarr-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.sonarr-secure.service=sonarr"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"

      - "traefik.http.routers.prowlarr.entrypoints=http"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.jimsgarage.co.uk`)"
      - "traefik.http.middlewares.prowlarr-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.prowlarr.middlewares=prowlarr-https-redirect"
      - "traefik.http.routers.prowlarr-secure.entrypoints=https"
      - "traefik.http.routers.prowlarr-secure.rule=Host(`prowlarr.jimsgarage.co.uk`)"
      - "traefik.http.routers.prowlarr-secure.tls=true"
      - "traefik.http.routers.prowlarr-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.prowlarr-secure.service=prowlarr"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"

      - "traefik.http.routers.radarr.entrypoints=http"
      - "traefik.http.routers.radarr.rule=Host(`radarr.jimsgarage.co.uk`)"
      - "traefik.http.middlewares.radarr-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.radarr.middlewares=radarr-https-redirect"
      - "traefik.http.routers.radarr-secure.entrypoints=https"
      - "traefik.http.routers.radarr-secure.rule=Host(`radarr.jimsgarage.co.uk`)"
      - "traefik.http.routers.radarr-secure.tls=true"
      - "traefik.http.routers.radarr-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.radarr-secure.service=radarr"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"

      - "traefik.http.routers.homepage-arr.entrypoints=http"
      - "traefik.http.routers.homepage-arr.rule=Host(`homepage-arr.jimsgarage.co.uk`)"
      - "traefik.http.middlewares.homepage-arr-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.homepage-arr.middlewares=homepage-arr-https-redirect"
      - "traefik.http.routers.homepage-arr-secure.entrypoints=https"
      - "traefik.http.routers.homepage-arr-secure.rule=Host(`homepage-arr.jimsgarage.co.uk`)"
      - "traefik.http.routers.homepage-arr-secure.tls=true"
      - "traefik.http.routers.homepage-arr-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.homepage-arr-secure.service=homepage-arr"
      - "traefik.http.services.homepage-arr.loadbalancer.server.port=3000"

      - "traefik.http.routers.jellyfin-arr.entrypoints=http"
      - "traefik.http.routers.jellyfin-arr.rule=Host(`jellyfin-arr.jimsgarage.co.uk`)"
      - "traefik.http.middlewares.jellyfin-arr-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.jellyfin-arr.middlewares=jellyfin-arr-https-redirect"
      - "traefik.http.routers.jellyfin-arr-secure.entrypoints=https"
      - "traefik.http.routers.jellyfin-arr-secure.rule=Host(`jellyfin-arr.jimsgarage.co.uk`)"
      - "traefik.http.routers.jellyfin-arr-secure.tls=true"
      - "traefik.http.routers.jellyfin-arr-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.jellyfin-arr-secure.service=jellyfin-arr"
      - "traefik.http.services.jellyfin-arr.loadbalancer.server.port=8096"
